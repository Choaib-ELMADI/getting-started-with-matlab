1. Arrays Operations (1):
    a = [1 2 3 4 5 6];                      ==> Create one dimension array
    b = [1 2 3; 4 5 6]                      ==> Create two dimension array 2*3
    c = 1:10                                ==> Create one dimension array
    d = 1:2:20                              ==> Create one dimension array
    e = linspace(1, 20, 7)                  ==> Create one dimension array
    e_transpos = e'                         ==> The transpos of a vector
    f = rand(6, 4)                          ==> Create a two dimension array
    sub_f = f(1, [1 3])                     ==> Access a specific section of an array (first row, first and third column)
    copy_f = f(:, :)                        ==> Copy a matrix (all rows and columns)
    g = f(1, 2:end)                         ==> Access a specific section of an array (first row, second column to the end)
    h = f(1, 2:end-1)                       ==> Access a specific section of an array (first row, second column to the column before the last one)
    f(1:2, :) = []                          ==> Delete a specific section of an array

2. Arrays Operations (2):
    b < 4;                                  ==> Return a new array with logical values about this criterion (same size as b)
    ind = find(b < 4)                       ==> Return the indexes of b elements that meet the condition
    [r, c] = find(b <= 4)                   ==> Return the row and column indexes of b elements that meet the condition
    v = [a a]                               ==> Horizontal concatenation of arrays
    w = [a; a]                              ==> Vertical concatenation of arrays

3. Notes:
    ==> Matlab arrays are stored column wise memory. In other words, a column after another.